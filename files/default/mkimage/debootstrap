#!/usr/bin/env bash
set -e

VSYSTEM=qemu

cleanup() {
        [ "${MNT_DIR}" != "" ] && chroot ${MNT_DIR} umount /proc/ /sys/ /dev/ /boot/
        sleep 1s
        [ "${MNT_DIR}" != "" ] && umount ${MNT_DIR}
        sleep 1s
        [ "$DISK" != "" ] && ${VSYSTEM}-nbd -d ${DISK}
        sleep 1s
        [ "${MNT_DIR}" != "" ] && rm -r ${MNT_DIR}
}

fail() {
        cleanup
        echo ""
        echo "FAILED: $1"
        exit 1
}


HOSTNAME=${1}
ROOT_PASSWORD=${2}
VIRTUAL_DISK=${3}
PACKAGES=${4}
RELEASE=${5}
shift 5
DEBOOTSTRAP_ARGUMENTS=${@}

echo "Installing $RELEASE into $FILE..."

MNT_DIR=`tempfile`
rm ${MNT_DIR}
mkdir ${MNT_DIR}
DISK=

echo "Looking for nbd device..."

modprobe nbd max_part=16 || fail "failed to load nbd module into kernel"

for i in /dev/nbd*
do
	if ${VSYSTEM}-nbd -c ${i} ${VIRTUAL_DISK}
	then
		DISK=${i}
		break
	fi
done

[ "$DISK" == "" ] && fail "no nbd device available"

echo "Connected $FILE to $DISK"

echo "Partitioning $DISK..."
sfdisk ${DISK} -q -D -uM << EOF || fail "cannot partition $FILE"
,200,83,*
;
EOF

echo "Creating boot partition..."
mkfs.ext4 -q ${DISK}p1 || fail "cannot create /boot ext4"

echo "Creating root partition..."
mkfs.ext4 -q ${DISK}p2 || fail "cannot create / ext4"

echo "Mounting root partition..."
mount ${DISK}p2 ${MNT_DIR} || fail "cannot mount /"

echo "Installing $RELEASE..."
debootstrap "${RELEASE}" "${MNT_DIR}" "${DEBOOTSTRAP_ARGUMENTS}" || fail "cannot install $RELEASE into $DISK"

echo "Configuring system..."

sda1_uuid=`blkid -o value -s UUID ${DISK}p1`
sda2_uuid=`blkid -o value -s UUID ${DISK}p2`

cat <<EOF > ${MNT_DIR}/etc/fstab
UUID=${sda1_uuid} /boot               ext4    sync 0       2
UUID=${sda2_uuid} /                   ext4    errors=remount-ro 0       1
EOF

echo $HOSTNAME > ${MNT_DIR}/etc/hostname

cat <<EOF > ${MNT_DIR}/etc/hosts
127.0.0.1       localhost
127.0.1.1 		$HOSTNAME

# The following lines are desirable for IPv6 capable hosts
::1     localhost ip6-localhost ip6-loopback
ff02::1 ip6-allnodes
ff02::2 ip6-allrouters
EOF

cat <<EOF > ${MNT_DIR}/etc/network/interfaces
# The loopback network interface
auto lo
iface lo inet loopback

# The normal eth0
auto eth0
iface eth0 inet dhcp

# Maybe the VM has 2 NICs?
allow-hotplug eth1
iface eth1 inet dhcp

# Maybe the VM has 3 NICs?
allow-hotplug eth2
iface eth2 inet dhcp

pre-up sleep 5
EOF

mount --bind /dev/ ${MNT_DIR}/dev || fail "cannot bind /dev"
chroot ${MNT_DIR} mount -t ext4 ${DISK}p1 /boot || fail "cannot mount /boot"
chroot ${MNT_DIR} mount -t proc none /proc || fail "cannot mount /proc"
chroot ${MNT_DIR} mount -t sysfs none /sys || fail "cannot mount /sys"

chroot ${MNT_DIR} sh -c "apt-get update"
chroot ${MNT_DIR} sh -c "apt-get -y upgrade"

LANG=C DEBIAN_FRONTEND=noninteractive chroot ${MNT_DIR} apt-get install -y --force-yes -q ${PACKAGES} || fail "cannot install ${PACKAGES}"
chroot ${MNT_DIR} grub-install ${DISK} || fail "cannot install grub"
chroot ${MNT_DIR} update-grub || fail "cannot update grub"

sed -i "s|${DISK}p1|UUID=${sda1_uuid}|g" ${MNT_DIR}/boot/grub/grub.cfg
sed -i "s|${DISK}p2|UUID=${sda2_uuid}|g" ${MNT_DIR}/boot/grub/grub.cfg

chroot ${MNT_DIR} sh -c "echo root:${ROOT_PASSWORD} | chpasswd"

echo "blacklist pcspkr" > ${MNT_DIR}/etc/modprobe.d/blacklist.conf
rm -f ${MNT_DIR}/etc/udev/rules.d/70-persistent-net.rules
mkdir ${MNT_DIR}/etc/udev/rules.d/70-persistent-net.rules
rm -f ${MNT_DIR}/lib/udev/rules.d/75-persistent-net-generator.rules

sed -i 's/^#T0/T0/' ${MNT_DIR}/etc/inittab

cat >> ${MNT_DIR}/etc/inittab << EOF
vc:2345:respawn:/sbin/getty 38400 hvc0
EOF

echo "Finishing grub installation..."
grub-install ${DISK} --root-directory=${MNT_DIR} --modules="biosdisk part_msdos" || fail "cannot reinstall grub"

chroot ${MNT_DIR} sh -c "apt-get -y --purge autoremove"
chroot ${MNT_DIR} sh -c "apt-get -y clean"
chroot ${MNT_DIR} sh -c "find /var/cache -type f -delete -print"
chroot ${MNT_DIR} sh -c "dd if=/dev/zero of=/EMPTY bs=1M || true"
chroot ${MNT_DIR} sh -c "rm -f /EMPTY"
chroot ${MNT_DIR} sh -c "sync;sync;sync"
chroot ${MNT_DIR} sh -c "unset HISTFILE"

echo "SUCCESS!"
cleanup
exit 0
